# -*- coding: utf-8 -*-
# Generated by Django 1.9.6 on 2016-08-24 11:03
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion
import smart_selects.db_fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Bacini',
            fields=[
                ('id', models.CharField(editable=False, max_length=2, primary_key=True, serialize=False, unique=True)),
                ('text', models.CharField(max_length=30)),
                ('email', models.CharField(max_length=200)),
            ],
            options={
                'db_table': 'bacini',
            },
        ),
        migrations.CreateModel(
            name='Comuni',
            fields=[
                ('nom_com', models.CharField(max_length=40)),
                ('cod_com', models.CharField(editable=False, max_length=6, primary_key=True, serialize=False, unique=True)),
                ('nome_prov', models.CharField(max_length=40)),
                ('sigla_prov', models.CharField(max_length=2)),
            ],
            options={
                'ordering': ['nom_com'],
                'db_table': 'comuni',
            },
        ),
        migrations.CreateModel(
            name='DocumentazioneCollegata',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_doc', models.CharField(blank=True, db_column='tipo_doc', help_text='Max 100 caratteri', max_length=100, null=True, verbose_name='Tipologia Documento')),
                ('documento_collegato', models.FileField(blank=True, db_column='doc_coll', null=True, upload_to='documents/documenti_collegati/%Y/%m/%d')),
            ],
            options={
                'db_table': 'documentazione',
                'verbose_name_plural': 'Documentazione Collegata',
            },
        ),
        migrations.CreateModel(
            name='InserimentoDODS',
            fields=[
                ('id', models.CharField(editable=False, max_length=2, primary_key=True, serialize=False, unique=True)),
                ('text', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'inserimento_dods',
            },
        ),
        migrations.CreateModel(
            name='MotivoSegnalazione',
            fields=[
                ('id', models.CharField(editable=False, max_length=2, primary_key=True, serialize=False, unique=True)),
                ('text', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'motivo_segnalazione',
            },
        ),
        migrations.CreateModel(
            name='OggettoSegnalazione',
            fields=[
                ('id', models.CharField(editable=False, max_length=2, primary_key=True, serialize=False, unique=True)),
                ('text', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'oggetto_segnalazione',
            },
        ),
        migrations.CreateModel(
            name='Province',
            fields=[
                ('cod_prov', models.CharField(editable=False, max_length=3, primary_key=True, serialize=False, unique=True)),
                ('nome_prov', models.CharField(max_length=40)),
                ('sigla_prov', models.CharField(max_length=2)),
            ],
            options={
                'db_table': 'province',
            },
        ),
        migrations.CreateModel(
            name='Segnalazione',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codice_segnalazione', models.CharField(db_column='codsegn', editable=False, max_length=20, null=True, unique=True)),
                ('data_prot_arrivo', models.DateField(blank=True, db_column='data_prot_arr', db_index=True, null=True, verbose_name='Data protocollo di arrivo')),
                ('prot_arrivo', models.CharField(blank=True, db_column='prot_arrivo', db_index=True, help_text='Max 100 caratteri', max_length=100, null=True, verbose_name='Protocollo di arrivo')),
                ('segnalazione_aggiunta', django.contrib.gis.db.models.fields.PointField(blank=True, db_column='geom', db_index=True, null=True, srid=3003)),
                ('nota_segnalazione', models.FileField(db_column='nota_segn', null=True, upload_to='documents/note_segnalazione/%Y/%m/%d')),
                ('nominativo_segnalazione', models.CharField(db_column='nominativo_s', db_index=True, help_text='Max 100 caratteri', max_length=100, null=True, verbose_name='Nominativo Segnalazione')),
                ('corso_viabilita', models.CharField(blank=True, db_column='corso_via', db_index=True, help_text='Max 100 caratteri', max_length=100, null=True, verbose_name="Corso d'acqua / Viabilit\xe0 / Versante")),
                ('localita', models.CharField(blank=True, db_column='localita', db_index=True, help_text='Max 100 caratteri', max_length=100, null=True, verbose_name='Localit\xe0')),
                ('relazione_sopralluogo', models.FileField(blank=True, db_column='rel_sopr', null=True, upload_to='documents/relazione_sopralluogo/%Y/%m/%d')),
                ('nota_risposta', models.FileField(blank=True, db_column='nota_risp', null=True, upload_to='documents/nota_risposta/%Y/%m/%d')),
                ('desc_sint_crit', models.TextField(db_column='desc_sint_crit', null=True, verbose_name='Descrizione sintetica della criticit\xe0')),
                ('liv_prog_lav', models.TextField(blank=True, db_column='liv_prog_lav', null=True, verbose_name='Livello Progettazione o Lavori realizzati')),
                ('desc_sint_int', models.TextField(blank=True, db_column='desc_sint_int', null=True, verbose_name="Descrizione sintetica dell'intervento necessario")),
                ('importo_globale', models.DecimalField(blank=True, db_column='imp_glob', decimal_places=2, max_digits=11, null=True, verbose_name="Importo globale stimato dell'intervento (EURO)")),
                ('importo_richiesto', models.DecimalField(blank=True, db_column='imp_ric', decimal_places=2, max_digits=11, null=True, verbose_name='Importo richiesto (EURO)')),
                ('referente_documentazione', models.CharField(db_column='ref_doc', help_text='Max 100 caratteri', max_length=100, null=True, verbose_name='referente che detiene la documentazione')),
                ('note', models.TextField(blank=True, null=True)),
                ('stato_istruttoria', models.NullBooleanField(db_column='istruttoria')),
                ('data_inizio_istruttoria', models.DateTimeField(blank=True, db_column='data_inizio_istr', null=True, verbose_name='Data inserimento segnalazione')),
                ('data_fine_istruttoria', models.DateTimeField(blank=True, db_column='data_fine_istr', null=True, verbose_name='Data chiusura istruttoria')),
                ('email_task_id', models.CharField(db_column='email_task_id', max_length=40, null=True)),
                ('email_sent', models.BooleanField(db_column='email_sent', default=False, verbose_name='Sollecito inviato')),
                ('bacino_idrografico', models.ForeignKey(blank=True, db_column='bacidro', help_text='Bacino idrografico L 183/1989', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='bacini_ds', to='difesa_del_suolo_criticita.Bacini')),
                ('comune', smart_selects.db_fields.ChainedForeignKey(auto_choose=True, blank=True, chained_field='provincia', chained_model_field='cod_prov', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comune_ds', to='difesa_del_suolo_criticita.Comuni')),
                ('inserimento_dods', models.ForeignKey(blank=True, db_column='ins_dods', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='inserimento_dods_ds', to='difesa_del_suolo_criticita.InserimentoDODS', verbose_name='Inserimento nel Documento Operativo')),
                ('motivo_segnalazione', models.ForeignKey(db_column='mot_segn', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='motivo_segnalazione_ds', to='difesa_del_suolo_criticita.MotivoSegnalazione')),
                ('oggetto_segnalazione', models.ForeignKey(db_column='ogg_segn', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='oggetto_segnalazione_ds', to='difesa_del_suolo_criticita.OggettoSegnalazione')),
                ('provincia', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='provincia_ds', to='difesa_del_suolo_criticita.Province')),
            ],
            options={
                'verbose_name_plural': 'Segnalazioni Criticit\xe0',
            },
        ),
        migrations.CreateModel(
            name='SettoreRegComp',
            fields=[
                ('id', models.CharField(editable=False, max_length=2, primary_key=True, serialize=False, unique=True)),
                ('text', models.CharField(max_length=200)),
                ('email', models.CharField(max_length=200)),
            ],
            options={
                'db_table': 'set_reg_comp',
            },
        ),
        migrations.AddField(
            model_name='segnalazione',
            name='set_reg_comp',
            field=models.ForeignKey(db_column='set_reg_comp', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='set_reg_comp_ds', to='difesa_del_suolo_criticita.SettoreRegComp', verbose_name='Settore regionale competente'),
        ),
        migrations.AddField(
            model_name='segnalazione',
            name='utente',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='utente_ds', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='documentazionecollegata',
            name='relate',
            field=models.ForeignKey(db_column='segn_fk', null=True, on_delete=django.db.models.deletion.CASCADE, to='difesa_del_suolo_criticita.Segnalazione'),
        ),
        migrations.AddField(
            model_name='comuni',
            name='cod_prov',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='difesa_del_suolo_criticita.Province'),
        ),
    ]
